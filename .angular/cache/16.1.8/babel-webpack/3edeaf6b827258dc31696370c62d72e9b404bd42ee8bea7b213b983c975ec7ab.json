{"ast":null,"code":"import { Admin } from \"./admin/admin.model\";\nimport * as i0 from \"@angular/core\";\nexport class AdminService {\n  constructor() {\n    this.validAdmin = false;\n    this.admins = [new Admin('Aditya', '123', 'adi@example.com')];\n  }\n  validateAdmin(username, password) {\n    if (this.admins.filter(item => item.username == username && item.password == password).length > 0) {\n      this.validAdmin = true;\n      return true;\n    }\n    this.validAdmin = false;\n    return false;\n  }\n  static #_ = this.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac\n  });\n}","map":{"version":3,"names":["Admin","AdminService","constructor","validAdmin","admins","validateAdmin","username","password","filter","item","length","_","_2","factory","ɵfac"],"sources":["C:\\Users\\Arkady\\Documents\\Project\\Todo Frontend\\AngularTODO\\src\\app\\admin-service.ts"],"sourcesContent":["import { Admin } from \"./admin/admin.model\";\r\nimport { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class AdminService{\r\n    validAdmin: boolean = false;\r\n\r\n    admins: Admin[] = [\r\n        new Admin('Aditya','123','adi@example.com')\r\n    ]\r\n    \r\n    validateAdmin(username:string, password:string):boolean{\r\n        if(this.admins.filter(item => (item.username == username) && (item.password == password)).length>0){\r\n            this.validAdmin = true;\r\n            return true;\r\n        }\r\n        this.validAdmin = false;\r\n        return false;\r\n\r\n    }\r\n\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,qBAAqB;;AAG3C,OAAM,MAAOC,YAAY;EADzBC,YAAA;IAEI,KAAAC,UAAU,GAAY,KAAK;IAE3B,KAAAC,MAAM,GAAY,CACd,IAAIJ,KAAK,CAAC,QAAQ,EAAC,KAAK,EAAC,iBAAiB,CAAC,CAC9C;;EAEDK,aAAaA,CAACC,QAAe,EAAEC,QAAe;IAC1C,IAAG,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,IAAI,IAAKA,IAAI,CAACH,QAAQ,IAAIA,QAAQ,IAAMG,IAAI,CAACF,QAAQ,IAAIA,QAAS,CAAC,CAACG,MAAM,GAAC,CAAC,EAAC;MAC/F,IAAI,CAACP,UAAU,GAAG,IAAI;MACtB,OAAO,IAAI;;IAEf,IAAI,CAACA,UAAU,GAAG,KAAK;IACvB,OAAO,KAAK;EAEhB;EAAC,QAAAQ,CAAA,G;qBAfQV,YAAY;EAAA;EAAA,QAAAW,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}